service: lecshare-api

custom:
  generalBucket: assets-lecshare.oimo.ca
  #audioBucket: lecshare-api-audio
  # try to use the argument, then the provider stage
  stage: ${opt:stage, self:provider.stage}
  tableName: lecshare-api-${self:custom.stage}
  customDomain:
    # TODO change over to vikelabs.ca
    domainName: dev.oimo.ca
    basePath: lecshare
    stage: ${self:custom.stage}
    # TODO change over to api.oimo.ca (or api.vikelabs.ca)
    certificateName: 'dev.oimo.ca'
    endpointType: regional
    securityPolicy: tls_1_2
    createRoute53Record: false

provider:
  name: aws
  region: us-west-2 # oregon
  memorySize: 128
  runtime: go1.x
  # stage: production
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    # Restrict our IAM role permissions to
    # the specific table for the stage
    Resource:
      - "Fn::GetAtt": [ LecshareTable, Arn ]
  - Effect: Allow
    Action:
      - s3:GetObject
      - s3:PutObject
    Resource: "arn:aws:s3:::${self:custom.generalBucket}/*"
  #- Effect: Allow
  #  Action:
  #    - s3:GetObject
  #    - s3:PutObject
  #  Resource: "arn:aws:s3:::${self:custom.audioBucket}/*"

environment:
  tableName: ${self:custom.tableName}

functions:
  playground:
    description: GraphQL Playground Lambda
    handler: bin/playground
    events:
      - http:
          path: /
          method: get
          cors: true
      - http:
          path: /
          method: post
          cors: true
  graphql:
    description: GraphQL Endpoint
    handler: bin/graph
    events:
      - http:
          path: /query
          method: get
          cors: true
      - http:
          path: /query
          method: post
          cors: true
  convert-audio:
    description: Converts Lecture Audio
    handler: bin/convert-audio
    events:
      - s3:
        #bucket: ${self:custom.audioBucket}
        bucket: lecshare-api-audio
        event: s3:ObjectCreated:*
        rules:
          - suffix: .flac
    layers:
      - {Ref: FfmpegLambdaLayer}

resources:
  Resources:
    LecshareTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

package:
  # configuration of the files required in this service.
  exclude:
    - ./**
  include:
    - ./bin/**

plugins:
  - serverless-domain-manager

layers:
  ffmpeg:
    path: layer
    package:
      include:
        - ./**